name: CI

on: [push, pull_request]

jobs:
  build_pyapriltags_wheel:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: pyapriltags-wheels
    steps:
      - uses: actions/checkout@v4
        with:
          # checkout only this repo (Iris); we'll clone pyapriltags below
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install system build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake git python3-dev python3-pip

      - name: Clone your pyapriltags fork
        run: |
          git clone https://github.com/<your-username>/pyapriltags.git pyapriltags
          cd pyapriltags
          git submodule update --init --recursive

      - name: Build pyapriltags wheel
        working-directory: pyapriltags
        run: |
          python -m pip install --upgrade pip build wheel setuptools
          # either use build:
          python -m build --wheel --outdir ../wheels
          # or pip wheel . -w ../wheels

      - name: Upload wheels artifact
        uses: actions/upload-artifact@v4
        with:
          name: pyapriltags-wheels
          path: wheels/*.whl

  test:
    needs: build_pyapriltags_wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download built wheels
        uses: actions/download-artifact@v4
        with:
          name: pyapriltags-wheels
          path: ./wheels

      - name: show wheels
        run: ls -lah wheels

      - name: Install dependencies using local wheels
        run: |
          python -m pip install --upgrade pip setuptools wheel
          # Use the wheels directory as a local package source
          pip install --no-deps --no-index --find-links=./wheels pyapriltags
          # Now install the rest of your requirements (allow wheels to satisfy pyapriltags)
          pip install --no-index --find-links=./wheels -r requirements_lock.txt
